Viết chương trình bằng ngôn ngữ C cho phép người nhập vào ma trận kề của một đồ thị vô hướng và in các cung của nó ra màn hình.

Đầu vào

Dữ liệu đầu vào được đọc từ dòng nhập chuẩn (stdin, bàn phím) theo định dạng:

Dòng đầu tiên chứa 1 số nguyên n mô tả số đỉnh của đồ thị
n dòng tiếp theo mô tả ma trận kề của đồ thị. Mỗi dòng có n số nguyên, cách nhau 1 khoảng trắng.
Đầu ra


In các cung của đồ thị vừa nhập ra màn hình, mỗi cung trên 1 dòng theo mẫu: u v (u≤v)
.
Nếu có 2 cung (u1, v1) và (u2, v2) thì cung nào có u nhỏ sẽ được in ra trước. Nếu u bằng nhau thì cung nào có v nhỏ sẽ được in ra trước.
Chú ý

Giả sử dữ liệu đầu vào luôn hợp lệ, không cần phải kiểm tra
Nộp toàn bộ chương trình
Xem thêm định dạng đầu vào và đầu ra trong phần For example
Ấn "Precheck" (nếu có) để kiểm tra chương trình trên các ví dụ (sai KHÔNG bị trừ điểm)
Ấn "Check" (nếu có) để kiểm tra chương trình trên toàn bộ dữ liệu kiểm tra (sai bị TRỪ ĐIỂM)
Gợi ý

Đọc n, đọc ma trận kề và lưu trực tiếp vào G.A
Duyệt qua các ô của tam giác trên của ma trận kề G.A. Con số trong ô G.A[u][v] cho biết số cung đi từ u đến v.
For example:

Input	
4
1 0 2 0
0 1 1 2
2 1 0 0
0 2 0 2

Result
1 1
1 3
1 3
2 2
2 3
2 4
2 4
4 4
4 4



#include <stdio.h>

int main() {
    int n;
    
    // Đọc số lượng đỉnh
    scanf("%d", &n);
    
    // Khai báo ma trận kề
    int matrix[n][n];
    
    // Đọc ma trận kề
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &matrix[i][j]);
        }
    }

    // Duyệt qua phần tam giác trên của ma trận kề (u <= v)
    for (int u = 0; u < n; u++) {
        for (int v = u; v < n; v++) {
            // Nếu có cung từ u đến v, in ra
            if (matrix[u][v] > 0) {
                for (int i = 0; i < matrix[u][v]; i++) {
                    printf("%d %d\n", u + 1, v + 1); // In theo chỉ số 1
                }
            }
        }
    }
    
    return 0;
}

