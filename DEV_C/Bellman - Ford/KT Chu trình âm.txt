Viết chương trình đọc vào một đơn đồ thị có hướng, có trọng số, áp dụng thuật toán Bellman – Ford kiểm tra xem nó có chứa chu trình âm hay không khi ta tìm đường đi ngắn nhất từ đỉnh s đến các đỉnh còn lại.

Đầu vào (Input)

Dữ liệu đầu vào được nhập từ dòng nhập chuẩn (bàn phím, stdin) với định dạng:

Dòng đầu tiên chứa 2 số nguyên n và m tương ứng là số đỉnh và số cung.
m dòng tiếp theo mỗi dòng chứa 3 số nguyên u, v, w nói rằng cung (u, v) có trọng số w.
Dòng cuối cùng chứa đỉnh s.
Đầu ra (Output)

In ra màn hình YES nếu phát hiện có chu trình âm, ngược lại in ra NO.
Xem thêm ví dụ bên dưới.
Chú ý

Nếu không có đường đi từ s đến u thì không tính các chu trình âm chứa u.
For example:

Input	Result
4 4	YES
1 2 1
2 3 -1
3 4 -1
4 1 -1
2

8 13	YES
1 2 4
1 3 4
3 5 4
3 6 -2
4 1 3
4 3 2
5 4 1
5 7 -2
6 2 3
6 5 -3
7 6 2
7 8 2
8 5 -2
1

8 13	NO
1 2 4
1 3 4
3 5 4
3 6 2
4 1 3
4 3 2
5 4 1
5 7 5
6 2 3
6 5 -3
7 6 2
7 8 2
8 5 -2
1



#include <stdio.h>
#include <limits.h>

#define INF INT_MAX

typedef struct {
    int u, v, w;
} Edge;

int bellman_ford(int n, int m, Edge edges[], int s) {
    int dist[n + 1];
    
    // Khởi tạo khoảng cách
    for (int i = 1; i <= n; i++) {
        dist[i] = INF;
    }
    dist[s] = 0;

    // Thực hiện thuật toán Bellman-Ford
    for (int i = 1; i < n; i++) { // Lặp n-1 lần
        for (int j = 0; j < m; j++) {
            int u = edges[j].u;
            int v = edges[j].v;
            int w = edges[j].w;

            if (dist[u] != INF && dist[u] + w < dist[v]) {
                dist[v] = dist[u] + w;
            }
        }
    }

    // Kiểm tra chu trình âm
    for (int j = 0; j < m; j++) {
        int u = edges[j].u;
        int v = edges[j].v;
        int w = edges[j].w;

        if (dist[u] != INF && dist[u] + w < dist[v]) {
            // Nếu có thể tiếp tục cập nhật, chứng tỏ có chu trình âm
            return 1; // Có chu trình âm
        }
    }

    return 0; // Không có chu trình âm
}

int main() {
    int n, m;
    scanf("%d %d", &n, &m);

    Edge edges[m];

    // Đọc các cung
    for (int i = 0; i < m; i++) {
        scanf("%d %d %d", &edges[i].u, &edges[i].v, &edges[i].w);
    }

    int s;
    scanf("%d", &s);

    // Kiểm tra chu trình âm
    if (bellman_ford(n, m, edges, s)) {
        printf("YES\n");
    } else {
        printf("NO\n");
    }

    return 0;
}


